// <auto-generated />
using Challenges.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Challenges.Migrations
{
    [DbContext(typeof(ChallengesContext))]
    [Migration("20200528124204_UpdatingSorting")]
    partial class UpdatingSorting
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Challenges.Data.Entities.Addition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntegerOne");

                    b.Property<int>("IntegerTwo");

                    b.Property<int>("Result");

                    b.HasKey("Id");

                    b.ToTable("Additions");
                });

            modelBuilder.Entity("Challenges.Data.Entities.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntegerOne");

                    b.Property<int>("IntegerTwo");

                    b.Property<double>("Result");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Challenges.Data.Entities.Factorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Integer");

                    b.Property<int>("Result");

                    b.HasKey("Id");

                    b.ToTable("Factorials");
                });

            modelBuilder.Entity("Challenges.Data.Entities.Multiplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntegerOne");

                    b.Property<int>("IntegerTwo");

                    b.Property<int>("Result");

                    b.HasKey("Id");

                    b.ToTable("Multiplications");
                });

            modelBuilder.Entity("Challenges.Data.Entities.SortingInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CharacterSortingInputs");
                });

            modelBuilder.Entity("Challenges.Data.Entities.StringInversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Result");

                    b.Property<string>("String");

                    b.HasKey("Id");

                    b.ToTable("StringInversions");
                });

            modelBuilder.Entity("Challenges.Data.Entities.Subtraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntegerOne");

                    b.Property<int>("IntegerTwo");

                    b.Property<int>("Result");

                    b.HasKey("Id");

                    b.ToTable("Subtractions");
                });

            modelBuilder.Entity("Challenges.Data.Entities.WhiteSpaceRemoval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Result");

                    b.Property<string>("String");

                    b.HasKey("Id");

                    b.ToTable("WhiteSpcaeRemovals");
                });
#pragma warning restore 612, 618
        }
    }
}
